// <auto-generated />
using System;
using IntervalTimerWebApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntervalTimerWebApi.Migrations
{
    [DbContext(typeof(IntervalniTimerDbContext))]
    [Migration("20240121191017_UpdateVadba")]
    partial class UpdateVadba
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("IntervalTimerWebApi.Models.Trening", b =>
                {
                    b.Property<int>("id_trening")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("datum")
                        .HasColumnType("TEXT");

                    b.Property<int>("porabljene_kalorije")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tk_uporabnik")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("trajanje")
                        .HasColumnType("TEXT");

                    b.HasKey("id_trening");

                    b.HasIndex("tk_uporabnik");

                    b.ToTable("Treningi");
                });

            modelBuilder.Entity("IntervalTimerWebApi.Models.Uporabnik", b =>
                {
                    b.Property<int>("id_uporabnik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("datum_registracije")
                        .HasColumnType("TEXT");

                    b.Property<string>("eposta")
                        .HasColumnType("TEXT");

                    b.Property<string>("geslo")
                        .HasColumnType("TEXT");

                    b.Property<string>("ime")
                        .HasColumnType("TEXT");

                    b.Property<string>("priimek")
                        .HasColumnType("TEXT");

                    b.Property<string>("uporabnisko_ime")
                        .HasColumnType("TEXT");

                    b.HasKey("id_uporabnik");

                    b.ToTable("Uporabniki");
                });

            modelBuilder.Entity("IntervalTimerWebApi.Models.Vadba", b =>
                {
                    b.Property<int>("id_vadba")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("kalorije")
                        .HasColumnType("INTEGER");

                    b.Property<string>("naziv")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("rest")
                        .HasColumnType("TEXT");

                    b.Property<int>("sets")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tk_trening")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("work")
                        .HasColumnType("TEXT");

                    b.HasKey("id_vadba");

                    b.HasIndex("tk_trening");

                    b.ToTable("Vadbe");
                });

            modelBuilder.Entity("IntervalTimerWebApi.Models.Trening", b =>
                {
                    b.HasOne("IntervalTimerWebApi.Models.Uporabnik", "Uporabnik")
                        .WithMany()
                        .HasForeignKey("tk_uporabnik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uporabnik");
                });

            modelBuilder.Entity("IntervalTimerWebApi.Models.Vadba", b =>
                {
                    b.HasOne("IntervalTimerWebApi.Models.Trening", "Trening")
                        .WithMany()
                        .HasForeignKey("tk_trening")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trening");
                });
#pragma warning restore 612, 618
        }
    }
}
